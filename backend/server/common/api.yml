openapi: 3.0.2
info:
  title: cart-api
  description: Cart API
  version: 1.0.0
servers:
- url: /api/v1
tags:
- name: Products
  description: Simple product endpoints
- name: Specification
  description: The swagger API specification
paths:
  /products:
    get:
      tags:
      - Products
      description: Fetch all products
      responses:
        200:
          description: Returns all products
          content: {}
    post:
      tags:
      - Products
      description: Create a new product
      requestBody:
        description: The schema of a new product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductBody'
        required: true
      responses:
        200:
          description: Returns all products
          content: {}
  /products/cart:
    get:
      tags:
      - Cart
      - Products
      description: Calculate the price for multiple ranges of products and their grand total
      requestBody:
        description: The schema of the cart
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CartProductBody'
        required: true
      responses:
        200:
          description: Returns the price for each range of products and their grand total
          content: {}
        404:
          description: One or more products not found
          content: {}
  /products/{id}:
    get:
      tags:
      - Products
      parameters:
      - name: id
        in: path
        description: The id of the product to retrieve
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Return the product with the specified id
          content: {}
        404:
          description: Product not found
          content: {}
  /spec:
    get:
      tags:
      - Specification
      responses:
        200:
          description: Return the API specification
          content: {}
components:
  schemas:
    ProductBody:
      title: Product
      required:
      - name
      - customerPrice
      - cost
      type: object
      properties:
        name:
          type: string
          example: Jam
        customerPrice:
          type: number
          example: 1299
        cost:
          type: number
          example: 1099
    CartProductBody:
      title: Cart Product
      required:
      - name
      - quantity
      type: object
      properties:
        name:
          type: string
          example: Jam
        quantity:
          type: number
          example: 10
